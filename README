My current work involves training multiple classifiers, some with only a few features and some with 10-12. I do not
expect to have classifiers with more than 50 features. Often, these classifiers are trained in parallel. This runs
reasonably well on my laptop when looking at small examples with only a handful of classifiers. However, the same small
examples run very poorly on a machine with a 16 core, AMD Threadripper cpu (1950x). 

The CSVExample.java class found in DeepLearning4J's examples was is close enough to my own code to demonstrate this issue. 
Below are results for running this test on various CPUs, OSes, and ram configurations. The test uses CSVExample.java,
unmodified except for increasing iterations from 1,000 to 5,000. The results seem to indicate that 
higher core count CPUs, regardless of OS, ram configuration, or CPU vendor suffer significant performance penalties.

NOTE: This has only been tested with Java 8. Gradle build is failing on Java 11 and I have not
bothered to look into a solution. The windows timing code was tested in IntelliJ.

In order to run this using gradle:
    In the root of this directory:
        gradle -PmainClass=Runner execute

The repo should load up as an IntelliJ project if you would prefer to run it that way. 

Training the same classifier 5 times serially:
    Intel 7920HQ, 16 GB ram, MacOS 10.14, 4 cores (8 threads)
        Average runtime: 
        Total runtime:

    Intel 8700B, 16 GB ram, MacOS 10.14, 6 cores (12 threads)
        Average runtime:
        Total runtime:

    Intel 7980XE, 32 GB ram, Ubuntu 16.04 LTS, 18 cores (36 threads)
        Average runtime:
        Total runtime:

    AMD 1700X, 32 GB ram, Ubuntu 16.04 LTS, 8 cores (16 threads)
        Average runtime:
        Total runtime:

    AMD 1950X, 64 GB ram, Windows 10 (whatever the current update is), 16 cores (32 threads)
        Average runtime:
        Total runtime:

Training the same 5 classifiers in parallel:
    Intel 7920HQ, 16 GB ram, MacOS 10.14, 4 cores (8 threads)
        Runtime:

    Intel 8700B, 16 GB ram, MacOS 10.14, 6 cores (12 threads)
        Runtime: 

    Intel 7980XE, 32 GB ram, Ubuntu 16.04 LTS, 18 cores (36 threads)
        Runtime:

    AMD 1700X, 32 GB ram, Ubuntu 16.04 LTS, 8 cores (16 threads)
        Runtime:

    AMD 1950X, 64 GB ram, Windows 10 (whatever the current update is), 16 cores (32 threads)
        Runtime:

I'm lost as far as how to proceed to solve this issue, if somebody sees something in the code that obviously won't work
well for high core count CPUs please point it out, I need to get this resolved. 
